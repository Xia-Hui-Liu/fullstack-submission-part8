[{"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/index.js":"1","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/App.js":"2","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/NewBook.js":"3","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/Authors.js":"4","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/Books.js":"5","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/queries.js":"6","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/UpdateAuthor.js":"7","/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/LoginForm.js":"8"},{"size":807,"mtime":1692272254086,"results":"9","hashOfConfig":"10"},{"size":1494,"mtime":1692271827581,"results":"11","hashOfConfig":"10"},{"size":2102,"mtime":1691585771358,"results":"12","hashOfConfig":"10"},{"size":861,"mtime":1691586543036,"results":"13","hashOfConfig":"10"},{"size":775,"mtime":1692261789538,"results":"14","hashOfConfig":"10"},{"size":1120,"mtime":1692260493677,"results":"15","hashOfConfig":"10"},{"size":1892,"mtime":1691587808547,"results":"16","hashOfConfig":"10"},{"size":1387,"mtime":1692270816332,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uyfqvn",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/index.js",[],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/App.js",["44","45"],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/NewBook.js",["46"],[],"import { useState } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { ADD_BOOK, ALL_BOOKS } from '../queries'\n\nconst NewBook = (props) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [published, setPublished] = useState('')\n  const [genre, setGenre] = useState('')\n  const [genres, setGenres] = useState([])\n  const [error, setError] = useState(\"\")\n\n  const [createBook] = useMutation(ADD_BOOK, {\n    refetchQueries: [{ query: ALL_BOOKS}]\n  });\n\n  const result = useQuery(ALL_BOOKS)\n\n  if (!props.show) {\n    return null\n  }\n\n  const submit = async (event) => {\n    event.preventDefault()\n\n    const existingBook = result.data.allBooks.some(book => book.title === title);\n    if (existingBook) {\n      setError('Book with the same title already exists');\n      return;\n    }\n\n    createBook({ variables: { title, published: parseInt(published), author, genres }});\n\n    setTitle('');\n    setPublished('');\n    setAuthor('');\n    setGenres([]);\n    setGenre('');\n  }\n\n  const addGenre = () => {\n    setGenres(genres.concat(genre))\n    setGenre('')\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        <div>\n          title\n          <input\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author\n          <input\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          published\n          <input\n            type=\"number\"\n            value={published}\n            onChange={({ target }) => setPublished(target.value)}\n          />\n        </div>\n        <div>\n          <input\n            value={genre}\n            onChange={({ target }) => setGenre(target.value)}\n          />\n          <button onClick={addGenre} type=\"button\">\n            add genre\n          </button>\n        </div>\n        <div>genres: {genres.join(' ')}</div>\n        <button type=\"submit\">create book</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBook",[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/Authors.js",[],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/Books.js",[],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/queries.js",[],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/UpdateAuthor.js",[],[],"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/components/LoginForm.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":12,"column":10,"nodeType":"49","messageId":"50","endLine":12,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":13,"column":10,"nodeType":"49","messageId":"50","endLine":13,"endColumn":15},{"ruleId":"47","severity":1,"message":"51","line":11,"column":10,"nodeType":"49","messageId":"50","endLine":11,"endColumn":15},"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used."]