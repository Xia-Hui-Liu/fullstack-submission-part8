{"ast":null,"code":"var _jsxFileName = \"/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem('user-token');\n  console.log(token);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : null\n    }\n  };\n});\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n});\nReactDOM.createRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 1\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","ApolloClient","ApolloProvider","InMemoryCache","createHttpLink","setContext","authLink","_","headers","token","localStorage","getItem","console","log","authorization","httpLink","uri","client","cache","link","concat","createRoot","document","getElementById","render"],"sources":["/Users/xiahuiliu/Documents/fullstack-submission-part8/library-frontend/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('user-token')\n    console.log(token)\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : null,\n        }\n    }\n})\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:4000',\n})\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: authLink.concat(httpLink)\n})\n\nReactDOM.createRoot(document.getElementById('root')).render(\n<ApolloProvider client={client}>\n    <App />\n</ApolloProvider>\n)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,YAAY,EAAEC,cAAc,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AAAA;AAExD,MAAMC,QAAQ,GAAGD,UAAU,CAAC,CAACE,CAAC,WAAkB;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClB,OAAO;IACHD,OAAO,EAAE;MACL,GAAGA,OAAO;MACVM,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC/C;EACJ,CAAC;AACL,CAAC,CAAC;AAEF,MAAMM,QAAQ,GAAGX,cAAc,CAAC;EAC5BY,GAAG,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIhB,YAAY,CAAC;EAC5BiB,KAAK,EAAE,IAAIf,aAAa,EAAE;EAC1BgB,IAAI,EAAEb,QAAQ,CAACc,MAAM,CAACL,QAAQ;AAClC,CAAC,CAAC;AAEFhB,QAAQ,CAACsB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eAC3D,QAAC,cAAc;EAAC,MAAM,EAAEP,MAAO;EAAA,uBAC3B,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACM,CAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}